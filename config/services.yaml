# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'es'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    login_listener:
        class: App\EventListener\LoginListener
        arguments: ['@service_container']

    app.filter_manager:
        class: App\Filter\FilterManager
        arguments: ['@doctrine.orm.entity_manager', '@session']
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }
    form_types.tire_observation_type:
        class: App\Form\TireObservationType
        tags:
            - { name: form.type, alias: tire_observation_type }
    form_types.tire_depth_type:
        class: App\Form\TireDepthType
        tags:
            - { name: form.type, alias: tire_depth_type }
    form_types.description_cost_type:
       class: App\Form\DescriptionCostType
       tags:
           - { name: form.type, alias: description_cost_type }


#    sensio_framework_extra.view.listener:
#        alias: Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener